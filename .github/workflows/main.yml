name: main
on: [push, pull_request]

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.5'
          architecture: x64
      - run: sbt scalafmtCheckAll scalafmtSbtCheck
  build:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8.0.232', '11.0.5']
        scala: ['2.12.10', '2.13.1']
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: x64
      - run: sbt "++${{ matrix.scala}} test"
  publish-snapshot:
    name: publish-snapshot
    runs-on: ubuntu-latest
    needs: [build, checks]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.5'
          architecture: x64
      - run: ./scripts/gpg-setup.sh
        env:
          GPG_SECRET: ${{ secrets.GPG_SECRET }}
      - run: sbt +publishSigned
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  release:
    name: release
    runs-on: ubuntu-latest
    needs: [build, checks]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.5'
          architecture: x64
      - run: ./scripts/gpg-setup.sh
        env:
          GPG_SECRET: ${{ secrets.GPG_SECRET }}
      - run: sbt +publishSigned sonatypeBundleRelease
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
